#NEXUS
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 Saccharomyces_cerevisiae,
    2 Saccharomyces_paradoxus,
    3 Kazachstania_unispora,
    4 Kazachstania_exigua,
    5 Torulaspora_delbrueckii,
    6 Zygotorulaspora_mrakii,
    7 Lachancea_fermentati,
    8 Zygosaccharomyces_bailii,
    9 Zygosaccharomyces_rouxii,
   10 Zygosaccharomyces_mellis,
   11 Kluyveromyces_lactis,
   12 Kluyveromyces_marxianus,
   13 Brettanomyces_bruxellensis,
   14 Brettanomyces_nanus,
   15 Candida_margitis,
   16 Candida_theae,
   17 Candida_metapsilosis,
   18 Candida_parapsilosis,
   19 Candida_oxycetoniae,
   20 Candida_jiufengensis,
   21 Candida_pseudojiufengensis,
   22 Candida_subhashii,
   23 Candida_albicans,
   24 Candida_viswanathii,
   25 Scheffersomyces_stipitis,
   26 Schizosaccharomyces_pombe,
   27 Debaryomyces_fabryi,
   28 Schizosaccharomyces_osmophilus,
   29 Clavispora_lusitaniae,
   30 Candida_railenensis,
   31 Schizosaccharomyces_japonicus,
   32 Schizosaccharomyces_japonicus2,
   33 Purpureocillium_lilacinum,
   34 Gonapodya_sp.,
   35 Rhizopus_azygosporus;
   tree tree_1 [p = 0.250, P = 0.250] = [&W 0.249800] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_2 [p = 0.166, P = 0.416] = [&W 0.166089] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_3 [p = 0.107, P = 0.523] = [&W 0.106772] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_4 [p = 0.078, P = 0.601] = [&W 0.078379] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_5 [p = 0.060, P = 0.661] = [&W 0.059584] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_6 [p = 0.040, P = 0.700] = [&W 0.039723] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_7 [p = 0.028, P = 0.729] = [&W 0.028392] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_8 [p = 0.019, P = 0.748] = [&W 0.019062] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_9 [p = 0.016, P = 0.764] = [&W 0.015862] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_10 [p = 0.014, P = 0.778] = [&W 0.014130] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_11 [p = 0.012, P = 0.790] = [&W 0.011864] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_12 [p = 0.012, P = 0.802] = [&W 0.011864] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_13 [p = 0.010, P = 0.812] = [&W 0.009997] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_14 [p = 0.008, P = 0.819] = [&W 0.007731] (2,(((((10,9),8),((((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_15 [p = 0.007, P = 0.827] = [&W 0.007465] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_16 [p = 0.007, P = 0.833] = [&W 0.006665] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_17 [p = 0.007, P = 0.840] = [&W 0.006532] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_18 [p = 0.006, P = 0.846] = [&W 0.005865] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_19 [p = 0.005, P = 0.851] = [&W 0.004932] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_20 [p = 0.005, P = 0.856] = [&W 0.004799] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_21 [p = 0.004, P = 0.860] = [&W 0.004399] (2,(((((10,9),8),((((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_22 [p = 0.004, P = 0.864] = [&W 0.003866] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_23 [p = 0.004, P = 0.868] = [&W 0.003732] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_24 [p = 0.004, P = 0.871] = [&W 0.003599] (2,(((((10,9),8),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_25 [p = 0.003, P = 0.875] = [&W 0.003466] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_26 [p = 0.003, P = 0.878] = [&W 0.003332] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_27 [p = 0.003, P = 0.881] = [&W 0.002933] (2,(((((10,9),8),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_28 [p = 0.003, P = 0.883] = [&W 0.002666] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_29 [p = 0.003, P = 0.886] = [&W 0.002666] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_30 [p = 0.003, P = 0.889] = [&W 0.002533] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_31 [p = 0.002, P = 0.891] = [&W 0.002399] (2,(((((10,9),8),(((33,(((35,34),30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_32 [p = 0.002, P = 0.893] = [&W 0.002399] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_33 [p = 0.002, P = 0.896] = [&W 0.002399] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_34 [p = 0.002, P = 0.898] = [&W 0.002266] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_35 [p = 0.002, P = 0.900] = [&W 0.002266] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_36 [p = 0.002, P = 0.903] = [&W 0.002133] (2,(((((10,9),8),((((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_37 [p = 0.002, P = 0.905] = [&W 0.002133] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_38 [p = 0.002, P = 0.907] = [&W 0.002133] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_39 [p = 0.002, P = 0.909] = [&W 0.001999] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_40 [p = 0.002, P = 0.911] = [&W 0.001999] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_41 [p = 0.002, P = 0.913] = [&W 0.001999] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_42 [p = 0.002, P = 0.915] = [&W 0.001866] (2,(((((10,9),8),(((33,(30,((35,34),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_43 [p = 0.002, P = 0.917] = [&W 0.001866] (2,(((((10,9),8),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_44 [p = 0.002, P = 0.918] = [&W 0.001866] (2,(((((10,9),8),((((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_45 [p = 0.002, P = 0.920] = [&W 0.001866] (2,(((((10,9),8),(((34,((35,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_46 [p = 0.002, P = 0.922] = [&W 0.001733] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_47 [p = 0.002, P = 0.924] = [&W 0.001733] (2,(((((10,9),8),(((33,(34,(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_48 [p = 0.002, P = 0.925] = [&W 0.001733] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_49 [p = 0.002, P = 0.927] = [&W 0.001733] (2,(((((10,9),8),((((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_50 [p = 0.002, P = 0.929] = [&W 0.001600] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_51 [p = 0.002, P = 0.930] = [&W 0.001600] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((29,(((32,31),28),(27,26))),(14,13))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_52 [p = 0.001, P = 0.932] = [&W 0.001466] (2,(((((10,9),8),(((33,(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_53 [p = 0.001, P = 0.933] = [&W 0.001333] (2,(((((10,9),8),((((35,33),(34,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_54 [p = 0.001, P = 0.935] = [&W 0.001333] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_55 [p = 0.001, P = 0.936] = [&W 0.001333] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_56 [p = 0.001, P = 0.937] = [&W 0.001333] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_57 [p = 0.001, P = 0.938] = [&W 0.001200] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_58 [p = 0.001, P = 0.940] = [&W 0.001200] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_59 [p = 0.001, P = 0.941] = [&W 0.001200] (2,(((((10,9),8),(((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_60 [p = 0.001, P = 0.942] = [&W 0.001200] (2,(((((10,9),8),(((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_61 [p = 0.001, P = 0.943] = [&W 0.001200] (2,(((((10,9),8),((12,11),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),7))),(6,5)),(4,3)),1);
   tree tree_62 [p = 0.001, P = 0.944] = [&W 0.001066] (2,(((((10,9),8),(((33,(((35,34),30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_63 [p = 0.001, P = 0.945] = [&W 0.000933] (2,(((((10,9),8),(((33,(30,((35,(((24,23),(25,22)),(19,((21,20),((18,(17,16)),15))))),((((32,31),28),(27,26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_64 [p = 0.001, P = 0.946] = [&W 0.000933] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_65 [p = 0.001, P = 0.947] = [&W 0.000933] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_66 [p = 0.001, P = 0.948] = [&W 0.000933] (2,(((((10,9),8),(((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_67 [p = 0.001, P = 0.949] = [&W 0.000933] (2,(((((10,9),8),(((33,(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((((32,31),28),(27,26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_68 [p = 0.001, P = 0.950] = [&W 0.000933] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_69 [p = 0.001, P = 0.951] = [&W 0.000933] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_70 [p = 0.001, P = 0.952] = [&W 0.000933] (2,(((((10,9),8),(((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_71 [p = 0.001, P = 0.953] = [&W 0.000800] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_72 [p = 0.001, P = 0.953] = [&W 0.000800] (2,(((((10,9),8),(((33,(34,(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_73 [p = 0.001, P = 0.954] = [&W 0.000800] (2,(((((10,9),8),(((33,((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_74 [p = 0.001, P = 0.955] = [&W 0.000800] (2,(((((10,9),8),((((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_75 [p = 0.001, P = 0.956] = [&W 0.000800] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(((21,20),19),((18,(17,16)),15))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_76 [p = 0.001, P = 0.957] = [&W 0.000800] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(((21,20),19),((18,(17,16)),15))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_77 [p = 0.001, P = 0.957] = [&W 0.000800] (2,(((((10,9),8),((((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),((18,(17,16)),15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_78 [p = 0.001, P = 0.958] = [&W 0.000666] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_79 [p = 0.001, P = 0.959] = [&W 0.000666] (2,(((((10,9),8),((12,11),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),7))),(6,5)),(4,3)),1);
   tree tree_80 [p = 0.001, P = 0.959] = [&W 0.000666] (2,(((((10,9),8),(((33,((35,30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_81 [p = 0.001, P = 0.960] = [&W 0.000666] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_82 [p = 0.001, P = 0.961] = [&W 0.000666] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_83 [p = 0.001, P = 0.961] = [&W 0.000666] (2,(((((10,9),8),(((33,(34,(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_84 [p = 0.001, P = 0.962] = [&W 0.000533] (2,(((((10,9),8),(((33,(35,(34,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_85 [p = 0.001, P = 0.962] = [&W 0.000533] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_86 [p = 0.001, P = 0.963] = [&W 0.000533] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_87 [p = 0.001, P = 0.963] = [&W 0.000533] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_88 [p = 0.001, P = 0.964] = [&W 0.000533] (2,(((((10,9),8),((((35,33),(34,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_89 [p = 0.001, P = 0.965] = [&W 0.000533] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_90 [p = 0.001, P = 0.965] = [&W 0.000533] (2,(((((10,9),8),((((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_91 [p = 0.001, P = 0.966] = [&W 0.000533] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_92 [p = 0.001, P = 0.966] = [&W 0.000533] (2,(((((10,9),8),((((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_93 [p = 0.001, P = 0.967] = [&W 0.000533] (2,(((((10,9),8),(((34,((35,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_94 [p = 0.001, P = 0.967] = [&W 0.000533] (2,(((((10,9),8),(((33,(30,((35,34),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_95 [p = 0.001, P = 0.968] = [&W 0.000533] (2,(((((10,9),8),((12,11),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),7))),(6,5)),(4,3)),1);
   tree tree_96 [p = 0.001, P = 0.968] = [&W 0.000533] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_97 [p = 0.000, P = 0.969] = [&W 0.000400] (2,(((((10,9),8),(((34,(33,(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_98 [p = 0.000, P = 0.969] = [&W 0.000400] (2,(((((10,9),8),((12,11),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),7))),(6,5)),(4,3)),1);
   tree tree_99 [p = 0.000, P = 0.969] = [&W 0.000400] (2,(((((10,9),8),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_100 [p = 0.000, P = 0.970] = [&W 0.000400] (2,(((((10,9),8),((((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_101 [p = 0.000, P = 0.970] = [&W 0.000400] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_102 [p = 0.000, P = 0.971] = [&W 0.000400] (2,(((((10,9),8),((((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_103 [p = 0.000, P = 0.971] = [&W 0.000400] (2,(((((10,9),8),(((34,(33,((35,30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_104 [p = 0.000, P = 0.971] = [&W 0.000400] (2,(((((10,9),8),(((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_105 [p = 0.000, P = 0.972] = [&W 0.000400] (2,(((((10,9),8),(((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_106 [p = 0.000, P = 0.972] = [&W 0.000400] (2,(((((10,9),8),(((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_107 [p = 0.000, P = 0.973] = [&W 0.000400] (2,(((((10,9),8),(((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_108 [p = 0.000, P = 0.973] = [&W 0.000400] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_109 [p = 0.000, P = 0.973] = [&W 0.000400] (2,(((((10,9),8),(((33,(34,(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_110 [p = 0.000, P = 0.974] = [&W 0.000400] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),((21,20),(19,(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_111 [p = 0.000, P = 0.974] = [&W 0.000400] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(((21,20),19),((18,(17,16)),15))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_112 [p = 0.000, P = 0.975] = [&W 0.000400] (2,(((((10,9),8),(((33,(34,(30,(35,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_113 [p = 0.000, P = 0.975] = [&W 0.000400] (2,(((((10,9),8),(((33,((35,30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_114 [p = 0.000, P = 0.975] = [&W 0.000400] (2,(((((10,9),8),(((33,(35,(34,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_115 [p = 0.000, P = 0.976] = [&W 0.000400] (2,(((((10,9),8),((((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_116 [p = 0.000, P = 0.976] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((35,34),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_117 [p = 0.000, P = 0.976] = [&W 0.000267] (2,(((((10,9),8),(((33,(34,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_118 [p = 0.000, P = 0.977] = [&W 0.000267] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_119 [p = 0.000, P = 0.977] = [&W 0.000267] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_120 [p = 0.000, P = 0.977] = [&W 0.000267] (2,(((((10,9),8),(((33,(35,((34,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_121 [p = 0.000, P = 0.977] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_122 [p = 0.000, P = 0.978] = [&W 0.000267] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(27,(((32,31),28),26))),(14,13))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_123 [p = 0.000, P = 0.978] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),(35,((((32,31),28),(27,26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_124 [p = 0.000, P = 0.978] = [&W 0.000267] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(((21,20),19),((18,(17,16)),15))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_125 [p = 0.000, P = 0.979] = [&W 0.000267] (2,(((((10,9),8),(((35,(33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_126 [p = 0.000, P = 0.979] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((((24,23),(25,22)),(35,(19,((21,20),((17,16),(18,15)))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_127 [p = 0.000, P = 0.979] = [&W 0.000267] (2,(((((10,9),8),((((35,33),(34,(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_128 [p = 0.000, P = 0.979] = [&W 0.000267] (2,(((((10,9),8),((((35,33),(34,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_129 [p = 0.000, P = 0.980] = [&W 0.000267] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),((21,20),(19,(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_130 [p = 0.000, P = 0.980] = [&W 0.000267] (2,(((((10,9),8),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_131 [p = 0.000, P = 0.980] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((35,(((24,23),(25,22)),(19,((21,20),((18,(17,16)),15))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_132 [p = 0.000, P = 0.980] = [&W 0.000267] (2,(((((10,9),8),(((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_133 [p = 0.000, P = 0.981] = [&W 0.000267] (2,(((((10,9),8),(((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),((18,(17,16)),15))))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_134 [p = 0.000, P = 0.981] = [&W 0.000267] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_135 [p = 0.000, P = 0.981] = [&W 0.000267] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),((21,20),(19,((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_136 [p = 0.000, P = 0.981] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),(35,((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_137 [p = 0.000, P = 0.982] = [&W 0.000267] (2,(((((10,9),8),(((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_138 [p = 0.000, P = 0.982] = [&W 0.000267] (2,(((((10,9),8),(((34,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),(35,((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_139 [p = 0.000, P = 0.982] = [&W 0.000267] (2,(((((10,9),8),(((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_140 [p = 0.000, P = 0.983] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((((24,23),(25,22)),(35,(19,((21,20),((17,16),(18,15)))))),((27,(((32,31),28),26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_141 [p = 0.000, P = 0.983] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_142 [p = 0.000, P = 0.983] = [&W 0.000267] (2,(((((10,9),8),(((33,(35,((34,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_143 [p = 0.000, P = 0.983] = [&W 0.000267] (2,(((((10,9),8),(((33,((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_144 [p = 0.000, P = 0.984] = [&W 0.000267] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((29,(27,(((32,31),28),26))),(14,13))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_145 [p = 0.000, P = 0.984] = [&W 0.000267] (2,(((((10,9),8),(((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_146 [p = 0.000, P = 0.984] = [&W 0.000267] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_147 [p = 0.000, P = 0.984] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((35,(((24,23),(25,22)),(19,((21,20),((18,(17,16)),15))))),((27,(((32,31),28),26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_148 [p = 0.000, P = 0.985] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),(35,((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_149 [p = 0.000, P = 0.985] = [&W 0.000267] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),((21,20),(19,((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_150 [p = 0.000, P = 0.985] = [&W 0.000267] (2,(((((10,9),8),((((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_151 [p = 0.000, P = 0.985] = [&W 0.000267] (2,(((((10,9),8),((((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_152 [p = 0.000, P = 0.986] = [&W 0.000267] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_153 [p = 0.000, P = 0.986] = [&W 0.000267] (2,(((((10,9),8),(((33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((35,34),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_154 [p = 0.000, P = 0.986] = [&W 0.000267] (2,(((((10,9),8),(((33,(34,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_155 [p = 0.000, P = 0.986] = [&W 0.000133] (2,(((((10,9),8),(((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_156 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),(((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_157 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(34,(14,13)))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_158 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_159 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),(((35,(34,(33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_160 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),(((35,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(34,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_161 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),(((35,33),(34,(30,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_162 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),(((35,33),(34,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_163 [p = 0.000, P = 0.987] = [&W 0.000133] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_164 [p = 0.000, P = 0.988] = [&W 0.000133] (2,(((((10,9),8),(((33,((35,30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_165 [p = 0.000, P = 0.988] = [&W 0.000133] (2,(((((10,9),8),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_166 [p = 0.000, P = 0.988] = [&W 0.000133] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((29,(27,(((32,31),28),26))),(14,13))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_167 [p = 0.000, P = 0.988] = [&W 0.000133] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_168 [p = 0.000, P = 0.988] = [&W 0.000133] (2,(((((10,9),8),(((34,((35,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_169 [p = 0.000, P = 0.988] = [&W 0.000133] (2,(((((10,9),8),((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,(34,13)))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_170 [p = 0.000, P = 0.988] = [&W 0.000133] (2,(((((10,9),8),(((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_171 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_172 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_173 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_174 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_175 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),(35,((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_176 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),((21,20),(19,((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_177 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((29,(((32,31),28),(27,26))),(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_178 [p = 0.000, P = 0.989] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_179 [p = 0.000, P = 0.990] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_180 [p = 0.000, P = 0.990] = [&W 0.000133] (2,(((((10,9),8),(((33,(34,((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_181 [p = 0.000, P = 0.990] = [&W 0.000133] (2,(((((10,9),8),((33,((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_182 [p = 0.000, P = 0.990] = [&W 0.000133] (2,(((((10,9),8),(((35,34),(33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_183 [p = 0.000, P = 0.990] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_184 [p = 0.000, P = 0.990] = [&W 0.000133] (2,(((((10,9),8),(((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_185 [p = 0.000, P = 0.990] = [&W 0.000133] (2,(((((10,9),8),((((34,33),(30,(35,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_186 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),((12,11),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),7))),(6,5)),(4,3)),1);
   tree tree_187 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),(((33,(34,(30,(35,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_188 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),((12,11),(((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),7))),(6,5)),(4,3)),1);
   tree tree_189 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),((12,11),((33,((35,34),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),7))),(6,5)),(4,3)),1);
   tree tree_190 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),((33,(30,((((24,23),(25,22)),(35,(19,((21,20),((17,16),(18,15)))))),((27,(((32,31),28),26)),(29,(14,(34,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_191 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),(((33,((34,(35,30)),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_192 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,((34,14),13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_193 [p = 0.000, P = 0.991] = [&W 0.000133] (2,(((((10,9),8),(((35,33),(34,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_194 [p = 0.000, P = 0.992] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_195 [p = 0.000, P = 0.992] = [&W 0.000133] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(((21,20),19),(18,((17,16),15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_196 [p = 0.000, P = 0.992] = [&W 0.000133] (2,(((((10,9),8),(((34,(33,(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_197 [p = 0.000, P = 0.992] = [&W 0.000133] (2,(((((10,9),8),((35,((34,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_198 [p = 0.000, P = 0.992] = [&W 0.000133] (2,(((((10,9),8),(((34,(33,((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_199 [p = 0.000, P = 0.992] = [&W 0.000133] (2,(((((10,9),8),((33,(30,((((24,23),(25,22)),(35,(19,((21,20),((17,16),(18,15)))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_200 [p = 0.000, P = 0.992] = [&W 0.000133] (2,(((((10,9),8),((33,(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_201 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),(((34,33),((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_202 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),(((34,33),(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_203 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),(((33,(34,(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_204 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),((35,((34,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_205 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),((34,14),13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_206 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),(((((35,33),30),((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(34,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_207 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,(34,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_208 [p = 0.000, P = 0.993] = [&W 0.000133] (2,(((((10,9),8),((((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),((18,(17,16)),15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_209 [p = 0.000, P = 0.994] = [&W 0.000133] (2,(((((10,9),8),(((35,(34,(33,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_210 [p = 0.000, P = 0.994] = [&W 0.000133] (2,(((((10,9),8),(((34,((35,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_211 [p = 0.000, P = 0.994] = [&W 0.000133] (2,(((((10,9),8),(((33,(35,(34,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_212 [p = 0.000, P = 0.994] = [&W 0.000133] (2,(((((10,9),8),((((35,34),(33,(30,((((24,23),(25,22)),(((21,20),19),((18,(17,16)),15))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_213 [p = 0.000, P = 0.994] = [&W 0.000133] (2,(((((10,9),8),(((33,(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_214 [p = 0.000, P = 0.994] = [&W 0.000133] (2,(((((10,9),8),((((35,33),(30,(34,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_215 [p = 0.000, P = 0.994] = [&W 0.000133] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_216 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),(((33,(35,(34,(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_217 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_218 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_219 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),((((((35,34),33),30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_220 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),(((33,(34,(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_221 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),((21,20),(19,((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_222 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_223 [p = 0.000, P = 0.995] = [&W 0.000133] (2,(((((10,9),8),(((33,((35,(34,30)),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_224 [p = 0.000, P = 0.996] = [&W 0.000133] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_225 [p = 0.000, P = 0.996] = [&W 0.000133] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_226 [p = 0.000, P = 0.996] = [&W 0.000133] (2,(((((10,9),8),((((34,(35,33)),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_227 [p = 0.000, P = 0.996] = [&W 0.000133] (2,(((((10,9),8),(((33,((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_228 [p = 0.000, P = 0.996] = [&W 0.000133] (2,(((((10,9),8),(((34,(33,((35,30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_229 [p = 0.000, P = 0.996] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,((34,14),13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_230 [p = 0.000, P = 0.996] = [&W 0.000133] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_231 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),((((34,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),(35,((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_232 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_233 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((((32,31),28),(27,26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_234 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,((35,34),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_235 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(((21,20),19),((18,(17,16)),15))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_236 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),(((33,(35,(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((((32,31),28),(27,26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_237 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),(((34,(33,(35,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_238 [p = 0.000, P = 0.997] = [&W 0.000133] (2,(((((10,9),8),(((((35,34),33),((30,(((24,23),(25,22)),(19,((21,20),((18,(17,16)),15))))),((((32,31),28),(27,26)),(29,(14,13))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_239 [p = 0.000, P = 0.998] = [&W 0.000133] (2,(((((10,9),8),((((34,33),(35,(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((27,(((32,31),28),26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_240 [p = 0.000, P = 0.998] = [&W 0.000133] (2,(((((10,9),8),((((35,34),33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((29,(((32,31),28),(27,26))),(14,13))))),((12,11),7))),(6,5)),(4,3)),1);
   tree tree_241 [p = 0.000, P = 0.998] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_242 [p = 0.000, P = 0.998] = [&W 0.000133] (2,(((((10,9),8),(((34,(33,(30,(35,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_243 [p = 0.000, P = 0.998] = [&W 0.000133] (2,(((((10,9),8),(((33,(34,(35,(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((27,(((32,31),28),26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_244 [p = 0.000, P = 0.998] = [&W 0.000133] (2,(((((10,9),8),(((((35,34),33),(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_245 [p = 0.000, P = 0.998] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,((35,(((24,23),(25,22)),(19,((21,20),(18,((17,16),15)))))),((27,(((32,31),28),26)),(29,(34,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_246 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_247 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,(35,((((24,23),(25,22)),(19,((21,20),(18,((17,16),15))))),((27,(((32,31),28),26)),(29,(34,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_248 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),(((35,(33,(34,(30,((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_249 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),(((35,((34,33),(30,((((24,23),(25,22)),(((21,20),19),((18,(17,16)),15))),((((32,31),28),(27,26)),(29,(14,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_250 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),(((33,(((35,34),30),((((24,23),(25,22)),(19,((21,20),((18,(17,16)),15)))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_251 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),((((35,33),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_252 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),(((35,(33,(34,(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((((32,31),28),(27,26)),(29,(14,13)))))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_253 [p = 0.000, P = 0.999] = [&W 0.000133] (2,(((((10,9),8),((((35,(34,33)),(30,((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((29,(((32,31),28),(27,26))),(14,13))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_254 [p = 0.000, P = 1.000] = [&W 0.000133] (2,(((((10,9),8),(((33,((35,34),(30,((((24,23),(25,22)),(((21,20),19),((17,16),(18,15)))),((29,(((32,31),28),(27,26))),(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_255 [p = 0.000, P = 1.000] = [&W 0.000133] (2,(((((10,9),8),((((34,33),(30,((35,(((24,23),(25,22)),(19,((21,20),(18,((17,16),15)))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_256 [p = 0.000, P = 1.000] = [&W 0.000133] (2,(((((10,9),8),(((33,(((35,34),30),((((24,23),(25,22)),(19,((21,20),((17,16),(18,15))))),((27,(((32,31),28),26)),(29,(14,13)))))),(12,11)),7)),(6,5)),(4,3)),1);
   tree tree_257 [p = 0.000, P = 1.000] = [&W 0.000133] (2,(((((10,9),8),(((33,(30,((35,(((24,23),(25,22)),(19,((21,20),((17,16),(18,15)))))),((27,(((32,31),28),26)),(29,(14,(34,13))))))),(12,11)),7)),(6,5)),(4,3)),1);
end;
